- name: Get installed version
  shell: |
    {{ vault.bin }} --version | awk '{gsub("v", "", $2); print $2}'
  register: installed_vault_version
  ignore_errors: yes
  check_mode: no

- set_fact:
    needs_install: "{{ installed_vault_version.stdout != vault.version }}"
  check_mode: no

- set_fact:
    golang_artifact_arch: "arm64"
  when: node.hardware.arch == 'arm64'

- set_fact:
    golang_artifact_arch: "amd64"
  when: node.hardware.arch == 'x86_64'

- include_role:
    name: _service
  vars:
    service_name: vault
    launchd_name: io.hashicorp.vault
    launchd_template: templates/service.plist.j2
    systemd_template: templates/vault.service.j2

- include_tasks: "{{ node.hardware.os }}.yml"

- name: Create vault directories
  become: true
  file:
    path: "{{ item }}"
    owner: "{{ vault.user }}"
    group: "{{ user.group }}"
    state: directory
    mode: u=rwx,g=rw,o=
  with_items:
    - "{{ vault.config }}"
    - "{{ vault.config }}/tls"
    - "{{ vault.config }}/plugins"
    # make sure the bin prefix is /nidito (not /usr/...)
    # before enabling this, otherwise risk denying our local user account
    # permission to execute anything in /usr/(local/)bin!
    # - "{{ vault.bin | dirname }}"

- name: Install TLS certs
  become: true
  no_log: true
  copy:
    content: "{{ item.content }}"
    dest: "{{ vault.config }}/tls/{{ item.name }}"
    owner: "{{ vault.user }}"
    group: "{{ user.group }}"
    mode: u=rw,g=,o=
  with_items:
    - name: ca.pem
      content: "{{ config.services.ca.cert }}"
    - name: key.pem
      content: "{{ node.tls.key }}"
    - name: cert.pem
      content: "{{ node.tls.vault }}"
  notify:
    - restart service

- name: Install 1password plugin
  become: true
  check_mode: no
  unarchive:
    src: "{{ joao.src }}{{ joao.version }}/joao-{{ ansible_system | lower }}-{{ golang_artifact_arch }}.tgz"
    remote_src: yes
    dest: "{{ vault.config }}/plugins"
    mode: u=rwx,g=,o=
    owner: "{{ vault.user }}"
    group: "{{ user.group }}"
  notify: configure vault plugin

- name: get joao shasum
  become: true
  shell: |
    openssl dgst -sha256 -hex "{{ vault.config }}/plugins/joao" | awk '{print $2}'
  register: vault_joao_sha
  check_mode: no

- name: Configure vault
  become: true
  check_mode: no
  template:
    src: templates/config.hcl.j2
    dest: "{{ vault.config }}/config.hcl"
    owner: "{{ vault.user }}"
    group: "{{ user.group }}"
    mode: u=rw,g=r,o=
  notify:
    - restart service
