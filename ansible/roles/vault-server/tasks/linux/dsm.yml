- name: Get installed version
  shell: /usr/syno/bin/synopkg version vault
  register: installed_version
  check_mode: no
  ignore_errors: yes

- set_fact:
    needs_install: "{{ installed_version.stdout != config.services.vault.version }}"
    vault_zip: "vault_{{ config.services.vault.version }}_linux_amd64.zip"

- name: Get vault SPK
  when: needs_install
  git:
    name: https://github.com/numkem/vault-spk.git
    dest: /tmp/vault-spk
    update: no

- name: patch spk
  lineinfile:
    path: "/tmp/vault-spk/{{ item.path }}"
    state: present
    regexp: "{{ item.regex }}"
    line: "{{ item.line }}"
    backrefs: yes
  with_items:
    - path: 1_create_package/ui/config
      regex: '^(\s+)"port":"[\d+]"(,?)'
      line: '\g<1>"port": "{{ config.services.vault.port }}"\g<2>'
    - path: 2_create_project/INFO
      regex: '^version="[\d.]+"'
      line: 'version="{{ config.services.vault.version }}"'
    - path: 2_create_project/INFO
      regex: '^adminport="?[\d.]+"?'
      line: 'adminport={{ config.services.vault.port }}'
    - path: 2_create_project/scripts/consul.sc
      regex: '^dst.ports=.+'
      line: 'dst.ports="{{ config.services.vault.port }}/tcp {{ config.services.vault.port + 1 }}/tcp"'

- name: Get vault binary
  when: needs_install
  get_url:
    url: "https://releases.hashicorp.com/vault/{{ config.services.vault.version }}/{{ vault_zip }}"
    dest: /tmp/

- name: Unzip binary
  when: needs_install
  shell: |
    cd /tmp
    7z e {{ vault_zip }}
    mkdir -p /tmp/vault-spk/1_create_package/vault
    mv -f /tmp/vault /tmp/vault-spk/1_create_package/vault/
    rm -rf /tmp/{{ vault_zip }}

- name: Create SPK
  when: needs_install
  shell: cd /tmp/vault-spk; sh ./create_spk.sh

- name: Install SPK
  when: needs_install
  become: true
  shell: /usr/syno/bin/synopkg install /tmp/vault-spk/vault.spk

- name: Create the vault config directory
  when: needs_install
  become: true
  file:
    path: "{{ vault_config_dir }}"
    owner: "{{ vault_user }}"
    state: directory
    mode: u=rwx,g=rwx,o=
