- name: lookup user database
  become: true
  shell: "/usr/syno/sbin/synouser --get '{{ vault.user }}'"
  register: dsm_user_exists
  ignore_errors: yes
  check_mode: no

- name: lookup group membership
  become: true
  shell: |
    /usr/syno/sbin/synogroup --get '{{ user.group }}' | grep '\[{{ vault.user }}\]'
  register: dsm_user_in_group
  ignore_errors: yes
  check_mode: no

- set_fact:
    dsm_add_user: "{{ dsm_user_exists.rc != 0 }}"
    dsm_add_member: "{{ dsm_user_in_group.rc != 0 }}"
  check_mode: no

- name: "Add the {{ vault.user }} user"
  become: true
  when: dsm_add_user
  no_log: true
  shell: |
    /usr/syno/sbin/synouser --add "{{ vault.user }}" "{{ node.auth.password }}" "vault user" 0 "vault@nidi.to" 0

- name: "Add the {{ vault.user }} user to the {{ user.group }} group"
  become: true
  when: dsm_add_member
  shell: "/usr/syno/sbin/synogroup --memberadd '{{ user.group }}' '{{ vault.user }}'"

- name: Download vault
  when: needs_install
  become: yes
  get_url:
    url: "https://releases.hashicorp.com/vault/{{ vault.version }}/vault_{{ vault.version }}_linux_{{ golang_artifact_arch }}.zip"
    dest: /tmp

- name: Create the vault bin directory
  become: true
  file:
    path: "{{ vault.bin | dirname }}"
    owner: "{{ vault.user }}"
    group: "{{ user.group }}"
    state: directory
    mode: u=rwx,g=rwx,o=rx

- name: Install vault binary
  when: needs_install
  become: yes
  shell: |
    cd /tmp
    7z e vault_{{ vault.version }}_linux_{{ golang_artifact_arch }}.zip
    mv -f /tmp/vault {{ vault.bin }}
    chown "{{ vault.user }}:{{ user.group }}" "{{ consul.bin }}"
    rm -rf /tmp/vault_{{ vault.version }}_linux_{{ golang_artifact_arch }}.zip
  notify:
    - restart service
