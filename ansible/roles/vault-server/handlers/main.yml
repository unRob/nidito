- name: Restart vault service
  when: ansible_pkg_mgr == "homebrew"
  listen: restart vault
  become: yes
  shell: "launchctl unload -w /Library/LaunchDaemons/io.vault.daemon.plist; launchctl load -w /Library/LaunchDaemons/io.vault.daemon.plist"

- name: Reload systemctl daemons
  when: ansible_pkg_mgr == "pacman" or ansible_pkg_mgr == "unknown"
  listen: reload systemd daemons
  become: yes
  systemd:
    daemon_reload: true

- name: Restart vault service
  when: ansible_pkg_mgr == "pacman" or ansible_pkg_mgr == "unknown"
  listen: restart vault
  become: yes
  systemd:
    name: vault
    state: restarted

- name: Unseal vault
  listen: restart vault
  delegate_to: localhost
  no_log: true
  shell: VAULT_ADDR="https://{{ node.address }}:5570" vault operator unseal "{{ config.datacenters[node.dc].vault.unseal_key }}"

- name: Configure 1password plugin
  listen: configure vault plugin
  delegate_to: localhost
  # no_log: true
  shell: |
    set -o errexit
    export VAULT_ADDR="https://{{ node.address }}:5570"
    export VAULT_TOKEN="{{ config.datacenters[node.dc].vault.root_token }}"
    export PLUGIN_SHA="{{ vault_joao_sha.stdout }}"
    export VERSION="{{ joao.version }}"

    set -x
    vault plugin register \
      -sha256="$PLUGIN_SHA" \
      -version="$VERSION" \
      -args="vault-plugin" secret joao

    if vault plugin list secret | grep -c -m1 '^joao ' >/dev/null; then
      vault secrets tune -plugin-version="$VERSION" cfg/infra/
      vault secrets tune -plugin-version="$VERSION" cfg/svc/
    else
      vault secrets enable -path=cfg/infra joao
      vault secrets enable -path=cfg/svc joao
    fi
    set +x

    vault write cfg/infra/1password host={{ config.services.connect.host }} token={{ config.services.connect.token }} vault={{ config.services.connect.vaults.admin }}
    vault write cfg/svc/1password host={{ config.services.connect.host }} token={{ config.services.connect.token }} vault={{ config.services.connect.vaults.service }}
    vault plugin reload -plugin joao || true
