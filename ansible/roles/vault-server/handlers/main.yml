- name: Restart vault service
  when: ansible_pkg_mgr == "homebrew"
  listen: restart vault
  become: yes
  shell: "launchctl unload -w /Library/LaunchDaemons/io.vault.daemon.plist; launchctl load -w /Library/LaunchDaemons/io.vault.daemon.plist"

- name: Restart vault service
  when: ansible_pkg_mgr == "pacman"
  listen: restart vault
  become: yes
  systemd:
    name: vault
    state: restarted

- name: Restart vault service
  when: ansible_pkg_mgr == "unknown"
  listen: restart vault
  become: yes
  shell: /usr/syno/bin/synopkg restart vault || /usr/syno/bin/synopkg start vault

- name: Unseal vault
  listen: restart vault
  delegate_to: localhost
  no_log: true
  shell: VAULT_ADDR="https://{{ node.address }}:5570" vault operator unseal "{{ config.datacenters[node.dc].vault.unseal_key }}"

- name: Configure 1password plugin
  listen: configure vault plugin
  delegate_to: localhost
  no_log: true
  shell: |
    set -o errexit
    export VAULT_ADDR="https://{{ node.address }}:5570"
    export VAULT_TOKEN="{{ config.datacenters[node.dc].vault.root_token }}"
    export PLUGIN_SHA="{{ vault_op_connect_sha.stdout }}"
    export VERSION="1.0.0+nidito-{{ vault_op_plugin_version }}"

    vault plugin register -sha256="$PLUGIN_SHA" -command=op-connect -version="$VERSION" secret op-connect

    if vault plugin list secret | grep -c -m1 '^op-connect ' >/dev/null; then
      vault secrets tune -plugin-version="$VERSION" config/
      vault plugin reload -plugin op-connect || true
    else
      vault secrets enable --path=config op-connect
    fi
