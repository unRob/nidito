#!/bin/vbash

dpkg -i /config/wireguard/installer.deb


source /opt/vyatta/etc/functions/script-template
set interfaces wireguard wg0 address {{ config.datacenters[node.dc].peering.address }}
set interfaces wireguard wg0 description '{{ node.dc }} vpn'
set interfaces wireguard wg0 listen-port {{ config.services.wireguard.port }}
set interfaces wireguard wg0 mtu 1420

{% for name, peer in config.datacenters[node.dc].peering.peers.items() %}
{% if "dc" in peer %}
{% set _dc = config.datacenters[peer.dc] %}
set interfaces wireguard wg0 peer {{ _dc.peering.public_key }} allowed-ips {{ _dc.peering.address }}
set interfaces wireguard wg0 peer {{ _dc.peering.public_key }} allowed-ips {{ _dc.subnet }}
set interfaces wireguard wg0 peer {{ _dc.peering.public_key }} description '{{ peer.dc }} tunnel'
set interfaces wireguard wg0 peer {{ _dc.peering.public_key }} endpoint '{{ _dc.peering.endpoint }}'
set protocols static interface-route {{ _dc.subnet }} next-hop-interface wg0 description '{{ peer.dc }} tunnel'
{% else %}
{% set peer = config.datacenters[node.dc].peering.peers[name] %}
{% for ip in peer.allowed_ips %}
set interfaces wireguard wg0 peer {{ peer.public_key }} allowed-ips {{ ip }}
{% endfor %}
set interfaces wireguard wg0 peer {{ peer.public_key }} description '{{ name }}'
{% if "endpoint" in peer %}
set interfaces wireguard wg0 peer {{ peer.public_key }} endpoint '{{ peer.endpoint }}'
{% endif %}
{% endif %}
{% endfor %}

set interfaces wireguard wg0 private-key {{ config.datacenters[node.dc].peering.key.private }}

set interfaces wireguard wg0 route-allowed-ips false

commit
exit
