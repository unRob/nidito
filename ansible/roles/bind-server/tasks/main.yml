- name: "Install bind"
  when: ansible_pkg_mgr == "homebrew"
  homebrew:
    name: bind
    state: present
  notify: restart bind

- name: Install bind config
  when: ansible_pkg_mgr == "homebrew"
  template:
    src: "templates/{{ node.dns.mode }}.conf.j2"
    dest: "{{ node.dns.location }}/named.nidito.conf"
    mode: u=rw,g=r,o=
  notify: restart bind

- name: Ensure bind includes our config
  lineinfile:
    path: "{{ node.dns.location }}/named.conf"
    regexp: "^include .+named.nidito.conf"
    line: 'include "{{ node.dns.location }}/named.nidito.conf";'
  notify: restart bind

- name: Ensure node dns records exist
  delegate_to: localhost
  nsupdate:
    key_name: "{{ nidito.dns.key.name }}"
    key_secret: "{{ nidito.dns.key.material }}"
    key_algorithm: "{{ nidito.dns.key.algorithm }}"
    server: "{{ dns.leaders | first }}"
    zone: "{{ nidito.dns.zone }}"
    record: "{{ item.key }}"
    value: "{{ item.value }}"
    ttl: 300
  with_items: "{{ dns.entries }}"

# - name: Ensure static dns records exist
#   delegate_to: localhost
#   nsupdate:
#     key_name: "{{ nidito.dns.key.name }}"
#     key_secret: "{{ nidito.dns.key.material }}"
#     key_algorithm: "{{ nidito.dns.key.algorithm }}"
#     server: "{{ dns.leaders | first }}"
#     zone: "{{ nidito.dns.zone }}"
#     record: "{{ item.key }}"
#     value: "{{ item.value }}"
#     type: "{{ item.type }}"
#     ttl: 3600
#   with_items:
#     - key: "_acme_challenge"
#       value: "{{ nidito.dns.tls_challenge_nameserver }}."
#       type: "NS"
