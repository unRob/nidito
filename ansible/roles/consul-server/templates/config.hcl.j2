datacenter = "brooklyn"
node_name = "{{ ansible_hostname }}"
log_level = "warn"
enable_syslog = true
data_dir = "/var/lib/consul"

# from https://blog.tjll.net/distributed-homelab-cluster/
# let only localhost and the docker network talk to the consul client
bind_addr = {% raw %}"{{ GetPrivateInterfaces | include \"network\" \"{% endraw %}{{ nidito.networks.trusted }}{% raw %}\" | attr \"address\" }}"{% endraw %}

client_addr = {% raw %}"{{ GetPrivateInterfaces | include \"network\" \"{% endraw %}{{ nidito.networks.trusted }}{% raw %}\" | attr \"address\" }} {{ GetInterfaceIP \"docker0\"}}"{% endraw %}

server = true
ui = true

retry_join = [
  {% for host in node.consul.peers %}
  "{{ host }}.{{ nidito.dns.zone }}"{{ "," if not loop.last else "" }}
  {% endfor %}
]

# https://learn.hashicorp.com/consul/security-networking/agent-encryption
encrypt = "{{ nidito.consul.encryption_key }}"
encrypt_verify_incoming = true
encrypt_verify_outgoing = true

acl {
  enabled = true
  default_policy = "deny"
  enable_token_persistence = true
  tokens {
    default = "{{ node.consul.token }}"
  }
}

ports {
  server = {{ nidito.consul.ports.server }}
  serf_lan = {{ nidito.consul.ports.serf_lan }}
  serf_wan = {{ nidito.consul.ports.serf_wan }}
  dns = {{ nidito.consul.ports.dns }}
  http = {{ nidito.consul.ports.http }}
}

telemetry {
  prometheus_retention_time = "744h"
}

{% if "http_services" in node.consul %}
{% for svc_name, service in node.consul.http_services.items() %}
services {
  id = "{{ svc_name }}"
  name = "{{ svc_name }}"
  port = {{ service.port }}
  address = "{{ node.address }}"

  tags = [
    "ansible",
    "nidito.dns.enabled",
    "nidito.http.enabled",
  ]

  meta = {
    nidito-acl = "allow {{ service.zone }}"
    nidito-http-zone = "{{ service.zone }}"
    nidito-http-buffering = "off"
  }

  checks = [
    {
      id = "{{ svc_name }}-http-check-{{ service.port }}"
      name = "{{ svc_name }}-http-check-{{ service.port }}"
      tcp = "localhost:{{ service.port }}"
      interval = "30s"
      timeout = "1s"
    }
  ]
}
{% endfor %}
{% endif %}
