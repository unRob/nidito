- name: Get installed version
  shell: "{{ consul_bin }} --version | head -n 1 | cut -dv -f2"
  register: installed_version
  check_mode: no
  ignore_errors: yes

- set_fact:
    needs_install: "{{ installed_version.stdout != config.services.consul.version }}"

- set_fact:
    golang_artifact_arch: "amd64"

- name: Download consul
  when: needs_install
  become: yes
  get_url:
    url: "https://releases.hashicorp.com/consul/{{ config.services.consul.version }}/consul_{{ config.services.consul.version }}_linux_{{ golang_artifact_arch }}.zip"
    dest: /tmp

- name: Install consul binary
  when: needs_install
  become: yes
  shell: |
    cd /tmp
    7z e consul_{{ config.services.consul.version }}_linux_{{ golang_artifact_arch }}.zip
    mv -f /tmp/consul {{ consul_bin }}
    rm -rf /tmp/consul_{{ config.services.consul.version }}_linux_{{ golang_artifact_arch }}.zip

# - name: Create SPK
#   when: needs_install
#   shell: cd /tmp/consul-spk; sh ./create_spk.sh

# - name: Install SPK
#   when: needs_install
#   become: true
#   shell: /usr/syno/bin/synopkg install /tmp/consul-spk/consul.spk

- name: Install systemd service
  become: yes
  template:
    src: templates/consul.service.j2
    dest: /usr/lib/systemd/system/consul.service
  notify:
    - reload systemd daemons
    - restart consul

- name: Enable consul daemon
  become: yes
  systemd:
    name: consul
    enabled: yes
  notify: restart consul


- name: Create the consul config directory
  when: needs_install
  become: true
  file:
    path: "{{ consul_config_dir }}"
    owner: "{{ consul_user }}"
    state: directory
    mode: u=rwx,g=rwx,o=
