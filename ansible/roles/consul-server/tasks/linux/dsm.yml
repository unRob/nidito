- name: lookup user database
  become: true
  shell: "/usr/syno/sbin/synouser --get '{{ consul.user }}'"
  register: dsm_user_exists
  ignore_errors: yes
  check_mode: no

- name: lookup group membership
  become: true
  shell: |
    /usr/syno/sbin/synogroup --get '{{ user.group }}' | grep '\[{{ consul.user }}\]'
  register: dsm_user_in_group
  ignore_errors: yes
  check_mode: no

- set_fact:
    dsm_add_user: "{{ dsm_user_exists.rc != 0 }}"
    dsm_add_member: "{{ dsm_user_in_group.rc != 0 }}"
  check_mode: no

- name: "Add the {{ consul.user }} user"
  become: true
  no_log: true
  when: dsm_add_user
  shell: |
    /usr/syno/sbin/synouser --add "{{ consul.user }}" "{{ node.token.consul }}" "consul user" 0 "consul@nidi.to" 0

- name: "Add the {{ consul.user }} user to the {{ user.group }} group"
  become: true
  when: dsm_add_member
  shell: "/usr/syno/sbin/synogroup --memberadd '{{ user.group }}' '{{ consul.user }}'"

- name: Download consul
  when: needs_install
  become: yes
  get_url:
    url: "https://releases.hashicorp.com/consul/{{ config.services.consul.version }}/consul_{{ config.services.consul.version }}_linux_{{ golang_artifact_arch }}.zip"
    dest: /tmp

- name: Create the consul bin directory
  become: true
  file:
    path: "{{ consul.bin | dirname }}"
    owner: "{{ consul.user }}"
    group: "{{ user.group }}"
    state: directory
    mode: u=rwx,g=rwx,o=rx

- name: Install consul binary
  when: needs_install
  become: yes
  shell: |
    cd /tmp
    7z e consul_{{ config.services.consul.version }}_linux_{{ golang_artifact_arch }}.zip
    mv -f /tmp/consul "{{ consul.bin }}"
    chown "{{ consul.user }}:{{ user.group }}" "{{ consul.bin }}"
    rm -rf /tmp/consul_{{ config.services.consul.version }}_linux_{{ golang_artifact_arch }}.zip

- name: configure systemd
  include_tasks: _systemd.yml
