data_dir = "{{ node.nomad.data }}"
datacenter = "brooklyn"
name = "{{ ansible_hostname }}"
log_level = "warn"
{# enable_syslog = true #}

bind_addr = "{% raw %}{{{% endraw %} GetPrivateInterfaces | include \"network\" \"{{ nidito.networks.management }}\" | attr \"address\" {% raw %}}}{% endraw %}"

server {
  enabled          = true
  heartbeat_grace  = "30s"
  min_heartbeat_ttl = "20s"
  # needs to be incremented gradually as servers boot
  bootstrap_expect = 3
}

ports {
  http = "{{ nidito.nomad.ports.http }}"
  rpc = "{{ nidito.nomad.ports.rpc }}"
  serf = "{{ nidito.nomad.ports.serf }}"
}

# https://github.com/perrymanuk/hashi-homelab/blob/master/configs/nomad-server.hcl
telemetry {
  disable_hostname = true
  prometheus_metrics = true
  publish_allocation_metrics = true
  publish_node_metrics = true
  use_node_name = false
}

client {
  enabled       = true
  node_class = "{{ ansible_system }}-{{ ansible_architecture }}"
  memory_total_mb = {{ node.nomad.memory | default("1000") }}

  cni_path = "/opt/cni/bin"
  cni_config_dir = "/opt/cni/config"

  options {
    driver.whitelist = "docker,exec,raw_exec"
  }

  meta {
    arch = "{{ ansible_system }}"
    machine = "{{ ansible_architecture }}"
    reachability = "{{ node.reachability }}"
    hardware = "{{ node.hardware }}"
{% if "meta" in node.nomad %}
{% for key, value in node.nomad.meta.items() %}
    {{ key }} = "{{ value }}"
{% endfor %}
{% endif %}
  }
}

plugin "raw_exec" {
  config {
    enabled = true
  }
}

plugin "docker" {
  config {
    gc {
      image_delay = "24h"
    }

    {# Not ready to do iSCSI or proper storage management #}

    volumes {
      enabled = true
    }
  }
}

consul {
  address = "{{ ansible_hostname }}.{{ nidito.dns.zone }}:{{ nidito.consul.ports.http }}"
  token = "{{ node.consul.token }}"

  auto_advertise = true
  server_auto_join = true
  client_auto_join = true

  tags = [
    "infra",
    "nidito.metrics.enabled",
    "nidito.metrics.path=/v1/metrics",
    "nidito.metrics.hc-prometheus-hack",
  ]
}

vault {
  enabled = true
  address = "http://vault.service.consul:{{ nidito.vault.port }}"
  token = "{{ nidito.nomad.token }}"
  create_from_role = "nomad-cluster"
}
