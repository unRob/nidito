data_dir = "{{ nomad_data_dir }}"
datacenter = "{{ node.dc }}"
name = "{{ ansible_hostname }}"
log_level = "warn"

bind_addr = "{% raw %}{{{% endraw %} GetPrivateInterfaces | include \"network\" \"{{ dc.subnet }}\" | attr \"address\" {% raw %}}}{% endraw %}"

server {
  enabled          = true
  heartbeat_grace  = "30s"
  min_heartbeat_ttl = "20s"
  # needs to be incremented gradually as servers boot
  bootstrap_expect = {% if dc.primary %}3{% else %}1{% endif %}
}

ports {
  http = "{{ config.services.nomad.ports.http }}"
  rpc = "{{ config.services.nomad.ports.rpc }}"
  serf = "{{ config.services.nomad.ports.serf }}"
}

# https://github.com/perrymanuk/hashi-homelab/blob/master/configs/nomad-server.hcl
telemetry {
  disable_hostname = true
  prometheus_metrics = true
  publish_allocation_metrics = true
  publish_node_metrics = true
  use_node_name = false
}

client {
  enabled       = true
  node_class = "{{ node.dc.os }}-{{ node.dc.arch }}"
  memory_total_mb = {% if ansible_memtotal_mb <= 4000 %}1000{% else %}{{ ansible_memtotal_mb * 0.9 | round }}{% endif %}

  cni_path = "/opt/cni/bin"
  cni_config_dir = "/opt/cni/config"

  options {
    driver.whitelist = "docker,exec,raw_exec"
  }

  meta {
    arch = "{{ node.hardware.arch }}"
    model = "{{ node.hardware.model }}"
    os_family = "{{ node.hardware.os | split('/') | first }}"
    os_version = "{{ node.hardware.os | split('/') | last }}"
{% for key, value in node.tags.items() %}
    {{ key }} = "{{ value }}"
{% endfor %}
  }
}

plugin "raw_exec" {
  config {
    enabled = true
  }
}

plugin "docker" {
  config {
    gc {
      image_delay = "24h"
    }

    volumes {
      enabled = true
    }
  }
}

consul {
  address = "https://{{ ansible_hostname }}.node.consul:{{ config.services.consul.ports.https }}"

  token = "{{ node.token.nomad.consul }}"
  tls_ca_file = "{{ nomad_config_dir }}/tls/ca.pem"

  auto_advertise = true
  server_auto_join = true
  client_auto_join = true

  tags = [
    "infra",
    "nidito.http.enabled",
    "nidito.http.tag-filter=http",
    "nidito.metrics.enabled",
    "nidito.metrics.path=/v1/metrics",
    "nidito.metrics.hc-prometheus-hack"
  ]
}

vault {
  enabled = true
  address = "https://vault.service.consul:{{ config.services.vault.port }}"
  token = "{{ node.token.nomad.vault }}"
  create_from_role = "nomad-cluster"
}
