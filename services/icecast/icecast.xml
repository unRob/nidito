{{ with secret "kv/nidito/config/dns" }}
{{- scratch.Set "zone" .Data.zone }}
{{ end }}
<icecast>
    <!-- location and admin are two arbitrary strings that are e.g. visible
         on the server info page of the icecast web interface
         (server_version.xsl). -->
    <location>nidito</location>
    <admin>icecast@{{ scratch.Get "zone" }}</admin>

    <limits>
        <clients>300</clients>
        <sources>2</sources>
        <queue-size>524288</queue-size>
        <client-timeout>30</client-timeout>
        <header-timeout>15</header-timeout>
        <source-timeout>60</source-timeout>
        <!-- If enabled, this will provide a burst of data when a client
             first connects, thereby significantly reducing the startup
             time for listeners that do substantial buffering. However,
             it also significantly increases latency between the source
             client and listening client.  For low-latency setups, you
             might want to disable this. -->
        <burst-on-connect>1</burst-on-connect>
        <!-- same as burst-on-connect, but this allows for being more
             specific on how much to burst. Most people won't need to
             change from the default 64k. Applies to all mountpoints  -->
        <burst-size>65535</burst-size>
    </limits>

    <authentication>
        {{ with secret "kv/nidito/config/services/icecast/credentials" }}
        <!-- Sources log in with username 'source' -->
        <source-password>{{ .Data.source_password }}</source-password>
        <!-- Relays log in with username 'relay' -->
        <relay-password>{{ .Data.source_password }}</relay-password>

        <!-- Admin logs in with the username given below -->
        <admin-user>admin</admin-user>
        <admin-password>{{ .Data.admin_password }}</admin-password>
        {{ end }}
    </authentication>

    <!-- This is the hostname other people will use to connect to your server.
         It affects mainly the urls generated by Icecast for playlists and yp
         listings. You MUST configure it properly for YP listings to work!
    -->
    <hostname>{{ env "NOMAD_TASK_NAME" }}.{{ scratch.Get "zone" }}</hostname>

    <!-- You may have multiple <listen-socket> elements -->
    <listen-socket>
        <port>8000</port>
        <!-- <bind-address>127.0.0.1</bind-address> -->
    </listen-socket>

    <!-- Global header settings
         Headers defined here will be returned for every HTTP request to Icecast.

         The ACAO header makes Icecast public content/API by default
         This will make streams easier embeddable (some HTML5 functionality needs it).
         Also it allows direct access to e.g. /status-json.xsl from other sites.
         If you don't want this, comment out the following line or read up on CORS.
    -->
    <http-headers>
        <header name="Access-Control-Allow-Origin" value="*" />
    </http-headers>


    <mount type="normal">
        <mount-name>/live.mp3</mount-name>
        <dump-file>/recordings/%Y-%m-%d-%H-%M-%S.mp3</dump-file>
        <!-- <fallback-mount>/example2.ogg</fallback-mount> -->
        <!-- <fallback-override>1</fallback-override> -->
        <!-- <fallback-when-full>1</fallback-when-full> -->
        <!-- <intro>/example_intro.ogg</intro> -->
        <!-- <hidden>1</hidden> -->
        <!-- <on-connect>/home/icecast/bin/stream-start</on-connect> -->
        <!-- <on-disconnect>/home/icecast/bin/stream-stop</on-disconnect> -->
    </mount>

    <fileserve>1</fileserve>

    <paths>
        <x-forwarded-for></x-forwarded-for>
        <!-- basedir is only used if chroot is enabled -->
        <basedir>/usr/share/icecast</basedir>

        <!-- Note that if <chroot> is turned on below, these paths must both
             be relative to the new root, not the original root -->
        <logdir>/var/log/icecast</logdir>
        <webroot>/usr/share/icecast/web</webroot>
        <adminroot>/usr/share/icecast/admin</adminroot>
        <!-- <pidfile>/usr/share/icecast/icecast.pid</pidfile> -->

        <alias source="/" destination="/status.xsl"/>
    </paths>

    <logging>
        <accesslog>-</accesslog>
        <errorlog>-</errorlog>
        <!-- <playlistlog>playlist.log</playlistlog> -->
        <loglevel>3</loglevel> <!-- 4 Debug, 3 Info, 2 Warn, 1 Error -->
        <logsize>10000</logsize> <!-- Max size of a logfile -->
        <!-- If logarchive is enabled (1), then when logsize is reached
             the logfile will be moved to [error|access|playlist].log.DATESTAMP,
             otherwise it will be moved to [error|access|playlist].log.old.
             Default is non-archive mode (i.e. overwrite)
        -->
        <!-- <logarchive>1</logarchive> -->
    </logging>

    <!-- <security>
        <chroot>0</chroot>
        <changeowner>
            <user>icecast</user>
            <group>icecast</group>
        </changeowner>
    </security> -->
</icecast>
