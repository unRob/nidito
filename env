#!/usr/bin/env zsh
# shellcheck shell=bash

NIDITO_ROOT="${0:a:h}"
export CONSUL_HTTP_ADDR="http://consul.service.consul:5555"
export NOMAD_ADDR="http://nomad.service.consul:5560"
export VAULT_ADDR="http://vault.service.consul:5570"
export CONFIG_FILE="$NIDITO_ROOT/config.yml"


function nidito_logs () {
  local service spec
  service="$1"
  shift
  spec="$NIDITO_ROOT/services/$service.nomad"

  if [[ ! -f "$spec" ]]; then
    echo "Unknown service: $service" >&2
    nidito_services >&2
    return 2
  fi

  nomad alloc logs $* -job "$service"
}

function nidito_services () {
  find $NIDITO_ROOT/services -name '*.nomad' | sort | sed -E 's/.*\/(.*).nomad/\1/'
}

function nidito_exec () {
  local alloc
  if ! alloc=$(curl -s "${NOMAD_ADDR}/v1/job/${1}/allocations" | jq -r '.[0].ID'); then
    echo "Unknown job <${1}>" >&2
    return 2
  fi

  shift;
  interactive="false"
  passtty="false"
  [ -t 1 ] && interactive="true"
  [ -t 2 ] && passtty="true"

  args=(/bin/sh)
  if [[ ${#@} -gt 0 ]]; then
    args+=(-c "${*}")
  fi

  nomad alloc exec \
    -i="$interactive" \
    -t="$passtty" \
    "$alloc" "${args[@]}"
}

function nidito_exec_local () {
  docker exec -it "$(docker ps | awk "/$1/ {print \$1}")" sh
}

function nidito_build () {
  local service tag image
  service="$1"

  if [[ ! -f "$NIDITO_ROOT/services/$service.nomad" ]]; then
    echo "Unknown service: $service" >&2
    nidito_services >&2
    return 2
  fi

  if [[ -f "$NIDITO_ROOT/services/$service/Dockerfile" ]]; then
    tag=$(date -u "+%Y%m%d%H%M")
    if [[ -n "$2" ]]; then
      tag="${2}-$tag"
    fi
    image="registry.nidi.to/${service}:$tag"
    if [[ -n "$TESTING" ]]; then
      docker build -t "${image%:*}:testing" "$NIDITO_ROOT/services/$service"
    else
      docker buildx build \
        --platform linux/amd64 \
        -t "$image" \
        "$NIDITO_ROOT/services/$service" --push

      sed -i '' -E 's#^( *image *= *)"[^"]*"#\1"'"$image"'"#' "$NIDITO_ROOT/services/$service.nomad"
    fi
  elif [[ -f "$NIDITO_ROOT/services/$service/Makefile" ]]; then
    (
      cd "$NIDITO_ROOT/services/$service"
      make nidito-build
    )
  fi
}

function nidito_deploy () {
  local service spec
  service="$1"
  spec="$NIDITO_ROOT/services/$service.nomad"

  if [[ ! -f "$spec" ]]; then
    echo "Unknown service: $service" >&2
    nidito_services >&2
    return 2
  fi

  nomad plan -verbose "$spec"
  result="$?"
  if [[ "$result" -gt 1 ]]; then
    return $result
  fi

  nomad run -verbose "$spec"
}
